 // Auto-generated by GameSoundsEnumAutoGenerator.

using UnityEngine;
using System.Collections;
using Fabric;
using System;
using UnityEngine.Profiling;
using System.Collections.Generic;

public class GameSounds
{
	static Dictionary<int, string> _gameSoundToNameMap = null;
	public static string GetEventString(GameSound soundEvent)
	{
		if (_gameSoundToNameMap == null)
		{
			_gameSoundToNameMap = new Dictionary<int, string>();

			foreach(var gameSound in Enum.GetValues(typeof(GameSound)))
				_gameSoundToNameMap.Add((int)gameSound, gameSound.ToString());
		}

		return _gameSoundToNameMap[(int)soundEvent];
	}

	public static bool PostMusicEvent(GameSound eventType, EventAction eventAction = EventAction.PlaySound)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), eventAction);

		return false;
	}

	public static bool PostEvent2D(GameSound eventType, EventAction eventAction = EventAction.PlaySound)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), eventAction);

		return false;
	}

	public static bool PostEvent2D(GameSound eventType, EventAction eventAction, object parameter)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), eventAction, parameter);

		return false;
	}

	public static bool PostEvent(GameSound eventType, GameObject parentGameObject)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), parentGameObject);

		return false;
	}

	public static bool PostEvent(GameSound eventType, GameObject parentGameObject, EventAction eventAction = EventAction.PlaySound)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), eventAction, parentGameObject);

		return false;
	}

	public static bool PostEvent(GameSound eventType, GameObject parentGameObject, InitialiseParameters initialiseParameters)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), parentGameObject, initialiseParameters);

		return false;
	}

	public static bool PostEvent(GameSound eventType, EventAction eventAction, GameObject parentGameObject)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), eventAction, parentGameObject);

		return false;
	}

	public static bool PostEvent(GameSound eventType, EventAction eventAction, object parameter, GameObject parentGameObject)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), eventAction, parameter, parentGameObject);

		return false;
	}

	public static bool PostEvent(GameSound eventType, EventAction eventAction, object parameter, GameObject parentGameObject, InitialiseParameters initialiseParameters)
	{
		if (EventManager.Instance)
			return EventManager.Instance.PostEvent(GetEventString(eventType), eventAction, parameter, parentGameObject, initialiseParameters);

		return false;
	}
}

public enum GameSound
{
	// MUSIC
	Music_MainTheme = 0,


	// SFX
	SFX_BlockCombine = 300,
	SFX_BlockDeny = 350,
	SFX_BlockPlacement1 = 375,
	SFX_BlockPlacement2 = 376,
	SFX_BlockPlacement3 = 377,
	SFX_BlockPlacement4 = 378,

	SFX_BlockRotateClockwise = 400,
	SFX_BlockRotateCounterClockwise = 425,
	

	NONE = 100000
}